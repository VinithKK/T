
#include <stdio.h>
#include <stdlib.h>
struct node
{
    int data;
    struct node *next;
};

struct node *rear=NULL;
struct node *front=NULL;
struct node *create_node(struct node *);
struct node *insert(struct node *);
struct node *delete1(struct node *);
struct node *display(struct node *);
int main() {
    
   int choice;
   printf("Queue Using Linked List\n");
   printf("---------------------------\n\n");
    do
    {
        printf("\n1.Create_Node\n2.Insert\n3.Delete\n4.Display\n5.Exit\n\n");
        printf("\nEnter your choice : ");
        scanf("%d",&choice);
    
        switch(choice)
        {
            case 1:
            rear=create_node(rear);
            break;
            
            case 2:
            rear=insert(rear);
            break;
        
            case 3:
            front=delete1(front);
            break;
            
            case 4:
            rear=display(front);
            break;
            
            case 5:
            exit(0);
            break;
            
            default:
            printf("\nPlease Enter the valid option.");
        }
    }while(choice!=5);
    
    return 0;
}

struct node *create_node(struct node *rear)
{
    int val;
    printf("\nEnter the value : ");
    scanf("%d",&val);
    struct node *newNode=(struct node*)malloc(sizeof(struct node));
    newNode->data=val;
    if(rear==NULL)
    {   
        newNode->next=NULL;
        rear=newNode;
        front=rear;
    }
    else
    {
    rear->next=newNode;
    newNode->next= NULL;
    rear = newNode;
    }
 return rear;   
}


struct node *insert(struct node *rear)
{
    int val;
    printf("\nEnter the value : ");
    scanf("%d",&val);
    struct node *newNode  ;
	newNode= (struct node *)malloc(sizeof(struct node));
    newNode->data=val;
    rear=front;
    while(rear->next!=NULL)
    {
    	rear=rear->next;
	}
	
    newNode->next= NULL;
    rear->next=newNode;
    rear = newNode;
return rear;
}


struct node *delete1(struct node *front)
{
    struct node *ptr=front;
    if(front==NULL)
    {
        printf("\n Can't delete because Queue empty.");
    }
    else
    {
        printf("\n\n%d element is deleted .",front->data);
        front=front->next;
    }
free(ptr);
return front;    
}

struct node *display(struct node *front)
{
    if(front==NULL)
    {
        printf("\n\nQueue empty.");
    }
    else
    {
        struct node *temp=front;
        printf("\n\nQueue elements : ");
        while(temp!=NULL)
        {
            printf("%d ",temp->data);
            temp=temp->next;
        }
    }
    printf("\n\n");
return front;
}