
#include <stdio.h>
#include <stdlib.h>
struct node
{
    int data;
    struct node *next;
};
struct node *top=NULL;
struct node *create_Node(struct node *);
struct node *push(struct node *);
struct node *pop(struct node *);
struct node *display(struct node *);

int main() {
    	printf("Stack Using Linked List\n");
	printf("------------------------\n\n");
	int choice;
    do
    {
        printf("\n1.Create_Node\n2.Push\n3.Pop\n4.Display\n5.Exit\n\n");
        printf("\nEnter your choice : ");
        scanf("%d",&choice);
    
        switch(choice)
        {
            case 1:
            top=create_Node(top);
            break;
            
            case 2:
            top=push(top);
            break;
        
            case 3:
            top=pop(top);
            break;
            
            case 4:
            top=display(top);
            break;
            
            case 5:
            exit(0);
            break;
            
            default:
            printf("\nPlease Enter the valid option.");
        }
    }while(choice!=5);
    
    return 0;
}


struct node *create_Node(struct node *top)
{
    int val;
    printf("\nEnter the value : ");
    scanf("%d",&val);
    struct node *newNode ;
    newNode=(struct node*)malloc(sizeof(struct node));

    newNode->data=val;
    
    if(top==NULL)
    {
        top=newNode;
        newNode->next=NULL;
    }
    else
    {
       newNode->next=top;
       top=newNode;
    }
return top;
}


struct node *push(struct node *top)
{
    int val;
    printf("\nEnter the value : ");
    scanf("%d",&val);
    struct node *newNode ;
    newNode=(struct node*)malloc(sizeof(struct node));
    newNode->data=val;
    newNode->next=top;
    top=newNode;
return top;
}

struct node *pop(struct node *top)
{
    
     struct node *temp ;
     if(top==NULL)
     {
         printf("\nStack Empty,So can't Pop the element");
     }
     else
     {
     printf("\n %d Element Popped",top->data);
     temp=top;
     top=top->next;
     }
     free(temp);
return top;

}




struct node *display(struct node *top)
{
     struct node *temp =top;
     if(top==NULL)
     {
         printf("\nStack Empty.!!!");
     }
     else
     {
     printf("\nElements are....");
     while(temp!=NULL)
        {
            printf("%d ",temp->data);
            temp=temp->next;
        }
     }
    printf("\n\n");
return top;
}



Output:
-------

1.Create_Node
2.Push
3.Pop
4.Display
5.Exit

Enter your choice : 1
Enter the value : 10

1.Create_Node
2.Push
3.Pop
4.Display
5.Exit

Enter your choice : 1
Enter the value : 20

1.Create_Node
2.Push
3.Pop
4.Display
5.Exit

Enter your choice : 4
Elements are....20 10 


1.Create_Node
2.Push
3.Pop
4.Display
5.Exit

Enter your choice : 3
20 Element Popped

1.Create_Node
2.Push
3.Pop
4.Display
5.Exit

Enter your choice : 4
Elements are....10 


1.Create_Node
2.Push
3.Pop
4.Display
5.Exit

Enter your choice : 2
Enter the value : 45

1.Create_Node
2.Push
3.Pop
4.Display
5.Exit

Enter your choice : 4
Elements are....45 10 


1.Create_Node
2.Push
3.Pop
4.Display
5.Exit

Enter your choice : 5
