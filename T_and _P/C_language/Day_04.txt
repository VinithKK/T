Ex-1 Anagram Program
----------------------

#include <stdio.h>
#include<string.h>

int main()
{
    char str1[20] ,str2[20];
    int i=0,temp,len1=0,len2=0,j=0,k;
    printf("Enter the string 1 :");
    scanf("%s",str1);
    printf("Enter the string 1 :");
    scanf("%s",str2);
    
   while(str1[i]!='\0')
    {
        len1++;
        i++;
    }
    while(str2[j]!='\0')
    {
        len2++;
        j++;
    }
    if(len1!=len2)
    {
        printf("Not a Anagram.");
    }
    else
    {
     for(i=0;i<len1;i++)
     {
        for(j=i+1;j<len1;j++)
        {
            if(str1[i]>str1[j])
            {
            temp=str1[i];
            str1[i]=str1[j];
            str1[j]=temp;
                
            }
        
            if(str2[i]>str2[j])
            {
            temp=str2[i];
            str2[i]=str2[j];
            str2[j]=temp;
            }
            
        }
        }
    }
    
    
    printf(strcmp(str1,str2)==0? "\nAnagram":"\nNot a Anagram");
    
    return 0;
}


Output:
--------

Enter the string 1 :listen
Enter the string 1 :slient

Anagram



----------------------------------------------------------------------------------------------------------------------------------

Ex-2 To check given string is Pangram or not. 
---------------------------------------------

#include <stdbool.h>
#include <stdio.h> 
#include <string.h> 
bool checkPangram(char str[]) 
{ 
	bool mark[26]; 
	int index;
	for (int i=0;i<26;i++)
	{
		mark[i]=false; 
	}
	
	size_t size=strlen(str); 
	for(int i=0;i<size;i++) 
	{ 
		if('A'<=str[i]&&str[i]<='Z')
		{	
			index=str[i]-'A';
		}
		else if('a'<=str[i]&&str[i]<='z') 
		{
			index=str[i]-'a';
		}
		else
		{	
			continue; 
		}
		mark[index] = true; 
	} 
	
	for(int i=0;i<=25;i++) 
		{
			if (mark[i]==false) 
				{
					return false; 
				}
		}

	return true; 
} 

int main() 
{ 
	char str[] ="The quick brown fox jumps over the lazy dog"; 
	if (checkPangram(str)==true) 
		{
			printf(" %s \n is a pangram", str); 
		}
	else{
		printf(" %s is \n not a pangram", str); 
		}
	return 0; 
} 


Output:
------

 The quick brown fox jumps over the lazy dog
 is a pangram

--------------------------------------------------------------------------------------------------------------------------

Ex-3 Perfect Number Program
---------------------------

#include <stdio.h>
int func(int);
int main() {
    int a,n;
    printf("Enter the number :");
    scanf("%d",&n);
    a=func(n);
    
    if(a==n){
        printf("Perfect Number");}
    else{
        printf("Not a perfect number");}
    return 0;
}

int func(int n)
{
    int i,sum=0;
    for(i=1;i<n;i++)
    {
        if(n%i==0)
        {
            sum=sum+i;
        }
    }
return sum;
}



Output:
--------
Enter the number :6
Perfect Number

----------------------------------------------------------------------------------------------------------------------------------

Ex-4 Automorphic Program
------------------------


#include <stdio.h>
void automorphic(int);
int main() {
    int n;
    printf("Enter the number :");
    scanf("%d",&n);
    automorphic(n);
    return 0;}

void automorphic(int n)
{
    int i,square,a,b1,b2,count=0,len=0,temp;
    square=n*n;
    b1=n;
    temp=n;
    while(temp!=0)
    {
    len++;
    temp=temp/10;
    }
    //printf("\n%d\n",square);
    while(b1!=0)
    {
        a=square%10;
        b2=b1%10;
        if(a==b2){
            count++;
        }
        square=square/10;
        b1=b1/10;
    }
    if(count==len)
        printf("Automorphic");
    else
        printf("not a automorphic");
}


Output:
--------
Enter the number :5
Automorphic

----------------------------------------------------------------------------------------------------------------------------------

Ex-5 Harshad Program
----------------------

#include <stdio.h>
int harshad(int);
int main() {
    int n,a;
    printf("Enter the number :");
    scanf("%d",&n);
    a=harshad(n);
    if(a==0)
    {
        printf("Harshad");
    }
    else{
      printf("Not a harshad");
    }
    return 0;
}
    
int harshad(int n)
{
    int a,temp,sum=0;
    temp=n;
    while(temp!=0)
    {
        a=temp%10;
        sum=sum+a;
        temp=temp/10;
    }
    if(n%sum==0)
    {
        return 0;
    }
    else
    {
       return 1;
    }
}


Output:
--------
Enter the number :21
Harshad


----------------------------------------------------------------------------------------------------------------------------------

Ex-6  Abundant Number Program
------------------------------

#include <stdio.h>
void abundant(int);
int main() {
   int n;
    printf("Enter the number :");
    scanf("%d",&n);
    abundant(n);
    return 0;
}

void abundant(int n)
{
    int i,a,sum=0,ans;
    for(i=1;i<n;i++)
    {
        if(n%i==0)
        {
            sum=sum+i;
        }
    }
    if(sum>n)
    {
        ans=sum-n;
        printf("\nAbundant number is %d",ans);
    }
    else
    {
        printf("Not a abundant number ");
    }
    
}



Output:
--------

Enter the number :12
Abundant number is 4

----------------------------------------------------------------------------------------------------------------------------------
Ex-7 friendly_pair program
--------------------------

#include <stdio.h>
int friendly_pair(int);
int main() {
    int a1,n1,n2,a2;
    printf("Enter the Number1 :");
    scanf("%d",&n1);
    printf("\nEnter the number2 :");
    scanf("%d",&n2);
    a1=friendly_pair(n1);
    a2=friendly_pair(n2);
    if(a1==a2)
    {
        printf("\nGiven Pair is Friendly Pair.");
    }
    else
    {
        printf("\nGiven Pair is Not a Friendly Pair.");
    }
    return 0;
}
int friendly_pair(int n1)
{
    int i,sum=0;
    for(i=1;i<n1;i++)
    {
        if(n1%i==0)
        {
            sum=sum+i;
        }
    }
return sum/n1;
}

Output:
--------
Enter the Number1 :6

Enter the number2 :28

Given Pair is Friendly Pair.

----------------------------------------------------------------------------------------------------------------------------------

Ex-8 Conversion Decimal to Binary
--------------------------------------------


#include <stdio.h>
void conversion(int);
int main()
{
    int d;
    printf("Enter the Decimal Number : ");
    scanf("%d",&d);
    conversion(d);
    return 0;
}

void conversion(int d)
{
	int j,i=0,arr[10000];
	while(d!=0)
    {
        arr[i]=d%2;
        
        d=d/2;
        ++i;
    }
    printf("\n The Binary Number is:");
    for(j=i-1;j>=0;j--)
    {
        printf(" %d",arr[j]);
    }	
}


Output:
--------
Enter the Decimal Number : 8

 The Binary Number is: 1 0 0 0

----------------------------------------------------------------------------------------------------------------------------------

Ex-9 Conversion Binary to Decimal
---------------------------------


#include<stdio.h>
#include<math.h> 
int conversion(int);
int main()
{
    int bin,ans;       
    printf("Enter a binary number: ");
    scanf("%d", &bin);
    ans=conversion(bin);
    printf("Decimal: %d", ans);    
    return 0;
}

int conversion(int bin)
{
	int remainder,i=0,decimal=0;
	while(bin != 0)
    {
        remainder = bin % 10;
        decimal += remainder * (int)pow(2, i++);
        bin = bin / 10;        
    }
return decimal;
}

Output:
------

Enter a binary number: 1100
Decimal: 12


----------------------------------------------------------------------------------------------------------------------------------

Ex-10 Perfom sorting in array like ..First half Descending order and second half Ascending order
-----------------------------------------------------------------------------------------------


#include <stdio.h>

int main()
{
  int i, a[20], n,j,temp1,temp2;
  printf ("Enter the n value :");
  scanf ("%d", &n);
  for (i =0 ; i<n ; i++)
  {
      printf("\n Enter the %d value : ",i+1);
      scanf("%d",&a[i]);
  }

  for (i =0;i<=n/2; i++)
  {
     for(j=i+1;j<=n/2;j++)
    {
       if(a[i]<a[j])
       {
           temp1=a[i];
           a[i]=a[j];
           a[j]=temp1;
       }
      
    }
  }
 
  for (i=(n/2)+1; i<n; i++)
  {
     for(j=i+1;j<n;j++)
    {
       if(a[i]>a[j])
       {
           temp2=a[i];
           a[i]=a[j];
           a[j]=temp2;
       }
      
    }
  }
  
  for (i =0 ; i<n ; i++)
  {
    printf("%d ",a[i]);   
  }
  
  return 0;
}


Output:
------


Enter the n value :7

 Enter the 1 value : 1

 Enter the 2 value : 2

 Enter the 3 value : 3

 Enter the 4 value : 4

 Enter the 5 value : 7

 Enter the 6 value : 6

 Enter the 7 value : 5

4 3 2 1 5 6 7


----------------------------------------------------------------------------------------------------------------------------------

Ex-11  Array Rotation
----------------------
#include<stdio.h>

void rotation(int arr[],int n,int rot)
{
	int i,index;
	rot=rot%n;
	for(i=0;i<n;i++)
	{
		index=(i-rot+n)%n;
		printf("%d",arr[index]);
	}
}


void main()
{
	int i,n,rot;
	int arr[40];
	printf("Enter the size of the array:");
	scanf("%d",&n);
	printf("\nEnter the array elements :\n");
	for(i=0;i<n;i++)
	{
	   		printf("\n Enter the %d value : ",i+1);
		scanf("%d",&arr[i]);
			
	}
	printf("\nEnter the number of rotation :");
	scanf("%d",&rot);
	printf("\n Array After rotation\n");
	rotation(arr,n,rot);
}

Output:
-------
Enter the size of the array:5

Enter the array elements :

 Enter the 1 value : 1

 Enter the 2 value : 2

 Enter the 3 value : 3

 Enter the 4 value : 4

 Enter the 5 value : 5

Enter the number of rotation :2

 Array After rotation
45123
----------------------------------------------------------------------------------------------------------------------------------

Ex-12  To find Factorial using recursion
----------------------------------------

#include<stdio.h>
int fact(int);
int main()
{
	int ans,n;
	printf("Enter the Number :");
	scanf("%d",&n);
	ans=fact(n);
	printf("\nThe Factorial value is :%d",ans);
	return 0;
}

int fact(int n)
{
	if(n==1)
	{
	return 1;	
	}
return n*fact(n-1);
}


Output:
------
Enter the Number :6

The Factorial value is :720
----------------------------------------------------------------------------------------------------------------------------------