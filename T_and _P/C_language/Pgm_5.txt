Task 05
----------
Ex-1 Power of number using recursion
------------------------------------
#include <stdio.h>
int power(int n1, int n2);
int main() {
    int base, a, result;
    printf("Enter base number: ");
    scanf("%d", &base);
    printf("Enter power number(positive integer): ");
    scanf("%d", &a);
    result = power(base, a);
    printf("%d^%d = %d", base, a, result);
    return 0;
}

int power(int base, int a) {
    if (a != 0)
        return (base * power(base, a - 1));
    else
        return 1;
}

Output:
-------
Enter base number: 2
Enter power number(positive integer): 3
2^3 = 8

---------------------------------------------------------------------------

Ex-2 Reversing a number using recursion
----------------------------------------------------------------------
#include <stdio.h>

int reverse(int num)
{
    static int rev = 0;
    static int temp = 1;
    if(num > 0)
    {
        temp=num%10;
        rev=rev*10+temp;
        reverse(num/10);
    }
    return rev;
}
int main()
{
    int number, reversed = 0;
    printf("Enter any number = ");
    scanf("%d", &number);
    reversed = reverse(number);
    printf("Reverse of no. is %d", reversed);
    return 0;
}

Output:
-------
Enter any number = 321
Reverse of no. is 123

---------------------------------------------------------------------------

Ex-3 Program to calculate length of the string using recursion
---------------------------------------------------------------
int length(char *str,int i)
{
    if(str[i]=='\0')
	{
   	return i;
	}
     	
    length(str,++i);

}
int main()
{
    char str[50]; 
    int ans;

    printf("Enter the string : ");
    scanf("%s",str);
    ans=length(str,0);
    printf("Length of the given string is'%s'= %d",str,ans);

    return 0;
}



Output:
-------
Enter the string : hello
Length of the given string is'hello'= 5

---------------------------------------------------------------------------

Ex-4  Finding the frequency of elements in an array
----------------------------------------------------

#include <stdio.h>

int main()
{
    int arr1[100], fr1[100];
    int n, i, j, count=0;

    printf("\n\nCount frequency of each element of an array:\n");
    printf("------------------------------------------------\n");
    printf("Enter the no of elements in array :");
    scanf("%d", &n);

    printf("Enter array elements :\n");
    for(i=0;i<n;i++)
    {
        printf("element - [%d] : ", i);
        scanf("%d", &arr1[i]);
        fr1[i]=-1;
    }

    for(i=0;i<n;i++)
    {
        count=1; 
        for(j=i+1;j<n;j++)
        {
            if(arr1[i]==arr1[j])
            {
                count++;     
                fr1[j] = 0;
            }
        }

        if (fr1[i]!=0)
        {
            fr1[i] = count;
        }
    }

    printf("\nThe frequency of all elements of the array : \n");
    for(i=0;i<n;i++)
    {
        if(fr1[i] != 0)
        {
            printf("%d occurs %d times\n", arr1[i], fr1[i]);
        }
	return 0;
    }
}


Output:
-------

--------------------------------------------------------------------------

Ex-5 Finding Minimum scalar product in C using Array
--------------------------------------------------------
#include <stdio.h>
int main(){
   int arr1[] = {1, 2, 6, 3, 7};
   int arr2[] = {10, 7, 45, 3, 7};
   int n = sizeof(arr1)/sizeof(arr1[0]);

   for(int i=0; i<n; i++){
       for(int j=i+1; j<n; j++){ if(arr1[i]>arr1[j]){
               int temp = arr1[i];
               arr1[i] = arr1[j];
               arr1[j] = temp;
           }
       }
   }
   for(int i=0; i<n; i++){
       for(int j=i+1; j<n; j++){
           if(arr2[i]<arr2[j]){
                int temp = arr2[i];
                arr2[i] = arr2[j];
                arr2[j] = temp;
           }
       }
    }
    int product = 0;
    for(int i=0; i<n; i++)
        product += arr1[i]*arr2[i];
    printf("%d ", product);
}


Output:
-------
149

---------------------------------------------------------------------------

Ex-6 Counting the number of even and odd elements in an array
---------------------------------------------------------------
#include<stdio.h>

int main(){

   int arr[] = {1, 7, 8, 4, 5, 16, 8};
   int n = sizeof(arr)/sizeof(arr[0]);

   int even_count=0, odd_count=0;

   for(int i=0; i<n; i++){
     if(arr[i]%2==0)
       even_count++;

     else
       odd_count++;
   }
   printf("Even Elements count : %d \nOdd Elements count : %d", even_count, odd_count);
}


Output:
-------
Even Elements count : 4
Odd Elements count : 3
---------------------------------------------------------------------------

Ex-7 Move all the negative elements to one side of the array
-----------------------------------------------------------

#include <stdio.h> 
int main() 
{ 
    int n, i, j; 
    printf("Enter the size of the Array: "); 
    scanf("%d", &n); 
    int arr[n]; 
    printf("Enter the elements:\n "); 
    for(i = 0; i < n; i++) 
    { 
        scanf("%d", &arr[i]); 
    } 
    j = 0; 
    for(i = 0; i < n; i++) 
    { 
        if(arr[i] < 0) 
        { 
            if(i != j) 
            { 
                int temp = arr[i]; 
                arr[i] = arr[j]; 
                arr[j] = temp; 
            } 
            j++; 
        } 
    } 
    printf("The resultant Array: "); 
    for(i = 0; i < n; i++) 
    { 
        printf("%d ", arr[i]); 
    }      
} 


Output:
-------

Enter the size of the Array: 5
Enter the elements:
Element [1] :7
Element [2] :-3
Element [3] :6
Element [4] :-9
Element [5] :2
The resultant Array: -3 -9 6 7 2

---------------------------------------------------------------------------

Ex-8 Highest Common Factor (HCF)
------------------------------------------------------------
#include <stdio.h>
int main()
{
    int n1,n2;
   
    n1 = 36, n2 = 60;
   
    int min = (n1<n2) ? n1 : n2;
    int hcf=1;
    for(int i=1; i<=min; i++)
    {
        if(n1%i==0 && n2%i==0)
        {
            hcf = i;
        }
    }
    printf(" HCF of %d and %d = %d\n", n1, n2, hcf);
   
    return 0;
}


Output:
-------
 HCF of 36 and 60 = 12

---------------------------------------------------------------------------

Ex-9 Decimal to Hexadecimal Conversion
--------------------------------------------------------------
#include<stdio.h>
#include<conio.h>
int main()
{
    int decnum, rem, i=0;
    char hexnum[50];
    printf("Enter any decimal number: ");
    scanf("%d", &decnum);
    while(decnum!=0)
    {
        rem = decnum%16;
        if(rem<10)
            rem = rem+48;
        else
            rem = rem+55;
        hexnum[i] = rem;
        i++;
        decnum = decnum/16;
    }
    printf("\nEquivalent Value in Hexadecimal = ");
    for(i=i-1; i>=0; i--)
        printf("%c", hexnum[i]);
    getch();
    return 0;
}


Output:
-------
Enter any decimal number: 35

Equivalent Value in Hexadecimal = 23
---------------------------------------------------------------------------

Ex-10  Create a structure called "Student" with members name, age, and total marks. Write a C program to input data for two students, display their information, and find the average of total marks.
-----------------------------------------------------------------------------------


#include <stdio.h>

struct Student {
    char name[50];
    int age;
    float totalMarks;
};

int main() {
    struct Student student1, student2;

    printf("Input details for Student 1:\n");
    printf("Name: ");
    scanf("%s", student1.name); 
    printf("Age: ");
    scanf("%d", &student1.age);
    printf("Total Marks: ");
    scanf("%f", &student1.totalMarks);

    printf("\nInput details for Student 2:\n");
    printf("Name: ");
    scanf("%s", student2.name);
    printf("Age: ");
    scanf("%d", &student2.age);
    printf("Total Marks: ");
    scanf("%f", &student2.totalMarks);

    printf("\nStudent 1 Information:\n");
    printf("Name: %s\n", student1.name);
    printf("Age: %d\n", student1.age);
    printf("Total Marks: %.2f\n", student1.totalMarks);

    printf("\nStudent 2 Information:\n");
    printf("Name: %s\n", student2.name);
    printf("Age: %d\n", student2.age);
    printf("Total Marks: %.2f\n", student2.totalMarks);

    float averageMarks = (student1.totalMarks + student2.totalMarks) / 2;
    printf("\nAverage Total Marks: %.2f\n", averageMarks);

    return 0;
}

Output:
-------

Input details for Student 1:
Name: a
Age: 18
Total Marks: 189

Input details for Student 2:
Name:b
Age: 18
Total Marks: 192

Student 1 Information:
Name: a
Age: 18
Total Marks: 189.00

Student 2 Information:
Name: b
Age: 18
Total Marks: 192.00

Average Total Marks: 190.50

