Day_06 [29-01-2024]
-------------------

Ex-01 Array Reverse Using Recursion
-----------------------------------

#include <stdio.h>
int reverse(int);
int main() {
    int n,ans;
    printf("Enter the number : ");
    scanf("%d",&n);
    ans=reverse(n);
    printf("\nThe Reverse of given number is : %d",ans);
    return 0;
}                                                                                                                                

int reverse(int n)
{
   static int rev,a;
    if(n!=0)
    {
        a=n%10;
        rev=(rev*10)+a;
        reverse(n/10);
    }
    else
    {
    return rev;  
    }
         
}


Output:
-------
Enter the number : 321
The Reverse of given number is : 123                                                                                                                                                                                                                                            -------------------------------------------------------------------------------------------------------------------------

Ex-02 TCS HR Question
-----------------------

#include <stdio.h>

int main() {
   int a=10;
    printf("%d %d %d %d %d",++a,a++,++a,a++,++a);

    return 0;
}

Output:
-------
15 13 15 11 15                                                                                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------

Ex-03 Dynamic Memory Allocation-malloc() 
---------------------------------------                                                                                                                                                                                              
#include<stdio.h>
#include<stdlib.h>
 int main()
 {
     int num,*ptr,i;
     printf("Enter the no of elements : ");
     scanf("%d",&num);
     
     ptr=(int*)malloc(num*sizeof(int));
     if(ptr==NULL)
	{
	printf("\n Memory not allocated.");
	exit(0);
	}
     
     printf("\n Enter elements :\n");
     for(i=0;i<num;++i)
        scanf("%d",ptr+i);
        
     printf("\n Entered elements :\n");
     for(i=0;i<num;++i)
        printf("%d",*(ptr+i));
    free(ptr);
        
 }

Output:
-------
Enter the no of elements : 5

 Enter elements :
1
2
3
4
5

 Entered elements :
12345

-----------------------------------------------------------------------------------------------------------------------------

Ex-04 Dynamic Memory Allocation-calloc() 
---------------------------------------
#include<stdio.h>
#include<stdlib.h>
 int main()
 {
     int num,*ptr,i;
     printf("Enter the no of elements : ");
     scanf("%d",&num);
     
     ptr=(int*)calloc(num,sizeof(int));
     if(ptr==NULL)
	{
	printf("\n Memory not allocated.");
	exit(0);
	}	
     
     printf("\n Enter elements :\n");
     for(i=0;i<num;++i)
        scanf("%d",ptr+i);
        
     printf("\n Entered elements :\n");
     for(i=0;i<num;++i)
        printf("%d",*(ptr+i));
    free(ptr);
        
 }

Output:
-------
Enter the no of elements : 5

 Enter elements :
1
2
3
4
5

 Entered elements :
12345

-----------------------------------------------------------------------------------------------------------------------------

Ex-05 Dynamic Memory Allocation-realloc() 
---------------------------------------

#include<stdio.h>
#include<stdlib.h>
 int main()
 {
     int size1,size2,*ptr,i;
     printf("Enter the array to allocate : ");
     scanf("%d",&size1);
     
     ptr=(int*)calloc(size1,sizeof(int));
     
     printf("\nSize : %d \n",size1);
     for(i=0;i<size1;++i)
     {
          printf("%d ",*(ptr+i));
     }
       
    
    printf("\nEnter the array to reallocate : ");
    scanf("%d",&size2);
    ptr=realloc(ptr,size2);
    
    printf("\nSize : %d\n",size2);
     for(i=0;i<size2;++i)
     {
        printf("%d ",(*ptr+i));
     }
    free(ptr);

return 0;
        
 }

Output:
-------
Enter the array to allocate : 3

Size : 3 
0 0 0 

Enter the array to reallocate : 5

Size : 5
0 0 0 0 0

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
Ex-06 Struct Pointer Program 
---------------------------------------

#include <stdio.h>
struct student
{
    char Name[20];
    int roll_no;
    float percentage;
};
int main() {
    struct student s1;
    struct student *ptr;
    ptr=&s1;
    printf("Enter the details\n");
    printf("-----------------");
    printf("\nEnter the Name : ");
    scanf("%s",ptr->Name);
    printf("\nEnter the roll number : ");
    scanf("%d",&ptr->roll_no);
    printf("\nEnter the mark in percentage : ");
    scanf("%f",&ptr->percentage);
    
    
    printf("\nThe Details is \n");
    printf("----------------\n");
    printf("Name : %s ",ptr->Name);
    printf("\nRoll Number : %d ",ptr->roll_no);
    printf("\nPercentage : %.2f ",ptr->percentage);

    return 0;
}


Output:
--------

Enter the details
-----------------
Enter the Name : S
Enter the roll number : 241123
Enter the mark in percentage : 98.7

The Details is 
----------------
Name : S 
Roll Number : 241123 
Percentage : 98.70 

--------------------------------------------------------------------------------------------------------------------------------
Ex-07	Write a C program to read array elements using pointers and print the value with address. 
------------------------------------------------------------------------------------------------
#include <stdio.h>
int main() {
    int *ptr,arr[50],n,i;
    ptr=&arr;
    printf("Enter the no of elements : ");
    scanf("%d",&n);
    for(i=0;i<n;i++)
    {
        printf("\nEnter [%d] element : ",i+1);
        scanf("%d",ptr+i);
    }
    printf("\n\n");
    
    for(i=0;i<n;i++)
    {
        printf("%03d -> %08X \n",*(ptr+i),(ptr+i));
    }
    return 0;
}

Output:
--------
Enter the no of elements : 5
Enter [1] element : 1
Enter [2] element : 2
Enter [3] element : 3
Enter [4] element : 4
Enter [5] element : 5

001 -> 1A4CCAE0 
002 -> 1A4CCAE4 
003 -> 1A4CCAE8 
004 -> 1A4CCAEC 
005 -> 1A4CCAF0 

--------------------------------------------------------------------------------------------------------------------------------

Ex-08 Write a C program to find the maximum number between two numbers using a pointer. 
-----------------------------------------------------------------------------------------

#include <stdio.h>

int main() 
{
    int n1,n2,*ptr1,*ptr2;
    ptr1=&n1;
    ptr2=&n2;
    printf("Enter number 1:");
    scanf("%d",ptr1);
    printf("Enter number 2:");
    scanf("%d",ptr2);
    if(ptr1>ptr2)
    {
        printf("Maximum value is : %d",*(ptr1));
    }
    else
    {
         printf("Maximum value is : %d",*(ptr2));
    }

    return 0;
}

Output:
--------
Enter number 1:-3
Enter number 2:-9

Maximum value is : -3

--------------------------------------------------------------------------------------------------------------------------------

Ex-09 Write a C program to print a string character by character using pointer. 
------------------------------------------------------------------------------

#include <stdio.h>
#include <string.h>

int main() 
{
    char str[50],*ptr;
    int i,len;
    ptr=&str;
    printf("Enter the string:");
    scanf("%s",ptr);
     len=strlen(ptr);
    for(i=0;i<len;i++)
    {
        printf("%c ",*(ptr+i));
    }
    return 0;
}
Output:
--------
Enter the string:hello
h e l l o 

--------------------------------------------------------------------------------------------------------------------------------

Ex-10 Write a C program to calculate length of the string using pointer
-----------------------------------------------------------------------

#include <stdio.h>
int main() 
{
    char str[50],*ptr;
    int i,len=0;
    ptr=&str;
    printf("Enter the string:");
    scanf("%s",ptr);
    for(i=0;ptr[i]!='\0';i++)
    {
        len++;
    }
   printf("\nThe string length is %d",len);
    return 0;
}


Output:
--------

Enter the string:hello
The string length is 5

--------------------------------------------------------------------------------------------------------------------------------

Ex-11 
---------------------------------------
#include <stdio.h>
int main() 
{
    int temp,start,end,i;
   static int count=0;
    printf("Enter the starting number :");
    scanf("%d",&start);
    printf("Enter the ending number :");
    scanf("%d",&end);
    
    for(i=start;i<end;i++)
    {
        int a[10],j=0;
        while(i!=0)
        {
            temp=i%10;
            a[j++]=temp;
            i=i/10;
        }
        while(j!=0)
        {
            if(a[j]==a[j+1])
            {
                count++;
            }
        }
    }
    printf("\n %d",count);
    return 0;
}

Output:
--------

--------------------------------------------------------------------------------------------------------------------------------
